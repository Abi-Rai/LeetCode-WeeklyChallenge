/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    
    List<int> ls;
    private static int mod = 1_000_000_007;
    
    public int MaxProduct(TreeNode root) {
        ls = new List<int>();
        int maxSum = DFS(root);
        long max = 0;
        
        for(int i = 0; i < ls.Count; i++){
            max = Math.Max(max, (long)ls[i] * (long)(maxSum - ls[i]));
        }
        return (int)(max % mod);
    }
        
    public int DFS(TreeNode root){
        if(root == null){
            return 0;
        }
        
        int left = DFS(root.left);
        int right = DFS(root.right);
        
        ls.Add(root.val + left + right);
        
        return root.val + left + right;
    }
    
}
