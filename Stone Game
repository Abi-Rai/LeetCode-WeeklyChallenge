public class Solution {
    public bool StoneGame(int[] piles) {
        int N= piles.Length;
        
        int[,] dp = new int[N+2,N+2];
        for(int size=1;size<=N;++size){
            for(int i=0;i+size<=N;++i){
                int j=i+size-1;
                int parity= (j+i+N)%2;
                if(parity==1){
                    dp[i+1,j+1] = Math.Max(piles[i]+dp[i+2,j+1],piles[j]+dp[i+1,j]);
                }else{
                    dp[i+1,j+1] = Math.Min(-piles[i] + dp[i+2,j+1], -piles[j] + dp[i+1,j]);
                }
            }
        }
        return dp[1,N]>0;
    }
}

/* or since mathematically Alex is always going to win the 2 pile game 

public class Solution {
    public bool StoneGame(int[] piles) {
        return true;
    }
}

*/
