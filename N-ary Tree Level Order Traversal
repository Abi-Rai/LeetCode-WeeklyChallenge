/*
// Definition for a Node.
public class Node {
    public int val;
    public IList<Node> children;

    public Node() {}

    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, IList<Node> _children) {
        val = _val;
        children = _children;
    }
}
*/

public class Solution {
    public IList<IList<int>> LevelOrder(Node root) {
        IList<IList<int>> res = new List<IList<int>>();
        if(root==null) return res;
        Queue<Node> queue = new Queue<Node>();
        queue.Enqueue(root);
        while(queue.Any()){
            int len = queue.Count();
            List<int> tempList = new List<int>();
            for(int i=0; i<len;++i){
                Node currNode = queue.Dequeue();
                tempList.Add(currNode.val);
                foreach(Node child in currNode.children){
                    queue.Enqueue(child);
                }
            }
            res.Add(tempList);
        }
        return res; 
    }
}
