/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode ReverseBetween(ListNode head, int left, int right) {
        ListNode dum= head;
        ListNode arr=head;
        Stack<int> st=new Stack<int>();
        for(int i=1;i<left;++i){
            dum=dum.next;
            arr=arr.next;
        }
        
        for(int i=left;i<=right;++i){
            st.Push(arr.val);
            arr=arr.next;
        }
        while(st.Count()!=0){
            dum.val=st.Pop();
            dum=dum.next;
        }
        return head;
    }
}
