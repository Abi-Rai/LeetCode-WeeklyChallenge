public class Solution {
    public int MaxEnvelopes(int[][] envelopes) {                
            Array.Sort(envelopes, (x, y) => Comparer<int>.Default.Compare(x[0] == y[0] ? -x[1]: x[0] , x[0] == y[0] ? -y[1] : y[0]));
            return LIS(envelopes.Select(e=>e[1]).ToArray());
    }
    
    private int LIS(int[] nums) {
        int[] dp = new int[nums.Length];
        int len = 0;
        foreach (int num in nums) {
            int i = Array.BinarySearch(dp, 0, len, num);
            if (i < 0) {
                i = -(i + 1);
            }
            dp[i] = num;
            if (i == len) {
                len++;
            }
        }
        return len;
    }
}
