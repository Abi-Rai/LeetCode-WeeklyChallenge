public class NumArray {
    int[] tree;
    int len;
    public NumArray(int[] nums) {
        if(nums.Length>0){
            len = nums.Length;
            tree = new int[len*2];
            BuildTree(nums);
        }
    }
    
    public void Update(int index, int val) {
        index+=len;
        tree[index]=val;
        while(index>0){
            int left = index;
            int right = index;
            if(index%2==0){
                right = index+1;
            }else{
                left=index-1;
            }
            tree[index/2]=tree[left]+tree[right];
            index/=2;
        }
    }
    
    public int SumRange(int left, int right) {
        left+=len;
        right+=len;
        int sum=0;
        while(left<=right){
            if(left%2==1){
                sum+=tree[left];
                ++left;
            }
            if(right%2==0){
                sum+=tree[right];
                --right;
            }
            left/=2;
            right/=2;
        }
        return sum;
    }
    
    private void BuildTree(int[] nums){
        for(int i=len,j=0;i<2*len;++i,++j){
            tree[i]=nums[j];
        }
        for(int i=len-1;i>0;--i){
            tree[i]=tree[i*2]+tree[i*2+1];
        }
    }
}

/**
 * Your NumArray object will be instantiated and called as such:
 * NumArray obj = new NumArray(nums);
 * obj.Update(index,val);
 * int param_2 = obj.SumRange(left,right);
 */
