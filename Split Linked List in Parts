/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */
public class Solution {
    public ListNode[] SplitListToParts(ListNode root, int k) {
        ListNode cur = root;
        int N =0;
        while(cur!=null){
            cur=cur.next;
            N++;
        }
        int width = N/k;
        int rem = N%k;
        ListNode[] res = new ListNode[k];
        cur = root;
        for(int i=0;i<k;++i){
            ListNode head = cur;
            for(int j=0;j<width+(i<rem?1:0)-1;++j){
                if(cur!=null) cur =cur.next;
            }
            if(cur!=null){
                ListNode prev = cur;
                cur = cur.next;
                prev.next =null;
            }
            res[i] = head;
        }
        return res;
    }
}
