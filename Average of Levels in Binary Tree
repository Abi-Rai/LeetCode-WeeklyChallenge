/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<double> AverageOfLevels(TreeNode root) {
        List<double> res = new List<double>();
        if(root == null)
            return res;
        Queue<TreeNode> queue = new Queue<TreeNode>();
        queue.Enqueue(root);
        while(queue.Count > 0)
        {
            int levelNodeCount = queue.Count;
            double runningSum = 0;
            for(int i=0;i<levelNodeCount;i++)
            {
                TreeNode curNode = queue.Dequeue();
                runningSum += curNode.val;
                if(curNode.left != null) 
                    queue.Enqueue(curNode.left);
                if(curNode.right != null)
                    queue.Enqueue(curNode.right);
            }
            res.Add(runningSum/levelNodeCount);
        }
        return res;
    }
}
