public class Solution {
    public int[] AdvantageCount(int[] A, int[] B) {
        int[] sortedA = (int[])A.Clone();
        int[] sortedB = (int[])B.Clone();
        Array.Sort(sortedA);
        Array.Sort(sortedB);
        Dictionary<int,Queue<int>> assigned = new Dictionary<int,Queue<int>>();
        foreach(int b in B){
            if(!assigned.ContainsKey(b))assigned.Add(b,new Queue<int>());
        }
        
        Queue<int> remaining = new Queue<int>();
        int j =0;
        foreach(int a in sortedA){
            if(a>sortedB[j]){
                assigned[sortedB[j++]].Enqueue(a);
            }else{
                remaining.Enqueue(a);
            }
        }
        
        int[] res = new int[B.Length];
        for(int i=0;i<B.Length;++i){
            if(assigned[B[i]].Count()>0){
                res[i] = assigned[B[i]].Dequeue();
            }else{
                res[i] = remaining.Dequeue();
            }
        }
        return res;
    }
}
