/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    private int max = 0,res = 0;
    public int DeepestLeavesSum(TreeNode root) {
        DFS(root, 1);
        return res;
    }
    
    private void DFS(TreeNode node, int depth)
    {
        if (node.left != null) DFS(node.left, depth + 1);
        if (node.right != null) DFS(node.right, depth + 1);
        
        if (node.left == null && node.right == null)
        {
            if (depth > max)
            {
                max = depth;
                res = node.val;
            }
            else if (depth == max)
                res += node.val;
        }
    }
}
