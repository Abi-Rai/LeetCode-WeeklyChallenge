/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    IList<int> res = new List<int>();
    int i = 0;
    
    public IList<int> FlipMatchVoyage(TreeNode root, int[] voyage){
        return dfs(root, voyage) ? res : new List<int>() { -1 };
    }
    
    private bool dfs(TreeNode node, int[] v){
        if (node == null) return true;
        if (node.val != v[i++]) return false;
        if (node.left != null && node.left.val != v[i]){
            res.Add(node.val);
            return dfs(node.right, v) && dfs(node.left, v);
        }
        else{
            return dfs(node.left, v) && dfs(node.right, v);
        }
    }
}
