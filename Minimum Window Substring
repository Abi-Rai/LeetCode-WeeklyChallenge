public class Solution {
    public string MinWindow(string s, string t) {
        Dictionary<char,int> dictT = new Dictionary<char,int>();
        foreach(char c in t){
            if(!dictT.ContainsKey(c)){
                dictT.Add(c,1);
            }else{
                dictT[c]++;
            }
        }
        int req = dictT.Count();
        int l=0,r=0;
        int formed =0;
        
        Dictionary<char,int> windowCounts = new Dictionary<char,int>();
        int[] ans = {-1,0};
        while(r<s.Length){
            char c = s[r];
            if(!windowCounts.ContainsKey(c)){
                windowCounts.Add(c,1);
            }else{
                windowCounts[c]++;
            }
            if(dictT.ContainsKey(c)&&windowCounts[c]==dictT[c]){
                formed++;
            }
            while(l<=r && formed==req){
                c = s[l];
                if(ans[0]==-1||r-l+1<ans[0]){
                    ans[0]=r-l+1;
                    ans[1]=l;
                }
                windowCounts[c]--;
                if(dictT.ContainsKey(c)&&windowCounts[c]<dictT[c]){
                    formed--;
                }
                l++;
            }
            r++;
        }
        return ans[0]==-1?"": s.Substring(ans[1],ans[0]);
    }
}
