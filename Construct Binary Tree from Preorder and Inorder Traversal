/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    Dictionary<int,int> dict;
    int preIndx;
    public TreeNode BuildTree(int[] preorder, int[] inorder) {
        preIndx = 0;
        dict = new Dictionary<int,int>();
        for(int i=0;i<inorder.Length;++i){
            dict.Add(inorder[i],i);
        }
        return  ToTree(preorder,0,preorder.Length-1);
    }
    private TreeNode ToTree(int[] preorder,int left, int right){
        if(left>right) return null;
        int val = preorder[preIndx++];
        TreeNode root = new TreeNode(val);
        
        root.left = ToTree(preorder,left,dict[val]-1);
        root.right = ToTree(preorder,dict[val]+1,right);
        return root;
    }
}
